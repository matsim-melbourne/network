on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

name: build

jobs:
  build:

    runs-on: ubuntu-18.04

    env:
      R_LIBS_USER: ${{ github.workspace }}/RLibs

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis:11-2.5
        # Provide the password for postgres
        env:
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: network_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:

    - name: Test postgres setup
      run: |
        psql -U postgres -c 'select version();'
      env:
        PGHOST: localhost
        PGPASSWORD: postgres
        PGPORT: 5432

    - name: Install required packages
      run: |
        sudo apt update
        sudo apt-get install libudunits2-dev libgdal-dev gdal-bin

    - name: Clone matsim-melbourne/network
      uses: actions/checkout@v2
      with:
        repository: matsim-melbourne/network
        path: network

    - name: Setup dirs and permissions for installing R packages
      run: |
        mkdir -p $R_LIBS_USER
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE/network
        sudo chown -R $USER:$USER $R_LIBS_USER

    - name: Cache R packages
      uses: actions/cache@v2
      id: cache-packrat
      env:
        cache-name: cache-packrat-lib
      with:
        path: |
          ${{ github.workspace }}/network/packrat/lib
          ${{ github.workspace }}/network/data
        key: ${{ runner.os }}-build-${{ env.cache-name }}-1-${{ hashFiles('**/packrat.lock') }}-${{ hashFiles('**/prepare.sh') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-1-

    - name: Get network data
      if: steps.cache-packrat.outputs.cache-hit != 'true'
      working-directory: network/data
      run: git checkout prepare.sh && ./prepare.sh -test

    - name: Install packrat and project dependencies
      if: steps.cache-packrat.outputs.cache-hit != 'true'
      working-directory: network
      shell: Rscript {0}
      run: |
        version
        install.packages('packrat')
        library(packrat)
        packrat::restore()

    - name: Test OSM processing for network generation
      working-directory: network
      run: ./processOSM.sh
      env:
        PGHOST: localhost
        PGPASSWORD: postgres
        PGPORT: 5432

    - name: Test MATSim network generation
      working-directory: network
      shell: Rscript {0}
      run: |

        testthat::test_dir("tests/testthat", stop_on_failure = TRUE)
        library(packrat)
      #packrat::on()
      #source("MATSimNetworkGenerator.R")
      #makeMatsimNetwork(F,20,F,F,F,F,T)
